type Card {
  id: ID!
  invitees: [Invitee!]!
  loginCode: String!
}

input CreateCard {
  loginCode: String!
}

input CreateInvitee {
  firstname: String!
  lastname: String!
}

input CreateTable {
  seats: Int!
}

enum Food {
  CHILD
  FISH
  MEAT
  VEGAN
  VEGETARIAN
}

type Invitee {
  allergies: String
  card: Card
  email: String
  firstname: String!
  food: Food
  id: ID!
  lastname: String!
  tableToSit: Table
  willCome: Boolean
}

type Mutation {
  createCard(card: CreateCard!): Card!
  createInvitee(invitee: CreateInvitee!): Invitee!
  createTable(table: CreateTable!): Table!
}

type Query {
  card(id: ID!): Card
  cards: [Card!]!
  invitee(id: ID!): Invitee
  invitees: [Invitee!]!
  table(id: ID!): Table
  tables: [Table!]!
}

type Table {
  id: ID!
  invitees: [Invitee!]!
  seats: Int!
}
