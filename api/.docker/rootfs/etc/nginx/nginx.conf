user app;

# Set number of worker processes automatically based on number of CPU cores.
worker_processes auto;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;

# Configures default error logger. [ debug | info | notice | warn | error | crit ]
error_log /var/log/nginx/error.log info;

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules-enabled/*.conf;

pid /run/nginx.pid;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    # "cannot exceed the current limit on the maximum number of open files" (RLIMIT_NOFILE)
    worker_connections 4096;
}

http {
    # Includes mapping of file name extensions to MIME types of responses
    # and defines the default type.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Specifies the maximum accepted body size of a client request, as
    # indicated by the request header Content-Length. If the stated content
    # length is greater than this size, then the client receives the HTTP
    # error code 413. Set to 0 to disable. Default is '1m'.
    client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};

    # Sendfile copies data between one FD and other from within the kernel,
    # which is more efficient than read() + write(). Default is off.
    sendfile on;

    # Causes nginx to attempt to send its HTTP response head in one packet,
    # instead of using partial frames. Default is 'off'.
    tcp_nopush on;

    # The first parameter sets a timeout during which a keep-alive client
    # connection will stay open on the server side. The zero value disables
    # keep-alive client connections. The optional second parameter sets a value
    # in the “Keep-Alive: timeout=time” response header field. Default is 75s.
    keepalive_timeout 65;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
